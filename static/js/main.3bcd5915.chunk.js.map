{"version":3,"sources":["components/Hero/index.js","components/Filters/DateFilter/index.js","components/Filters/OptionsFilter/index.js","components/Filters/index.js","components/Hotels/Hotel/index.js","components/Hotels/index.js","components/App/index.js","index.js"],"names":["Hero","parseDate","date","format","_this$props$filters","this","props","filters","dateFrom","dateTo","country","price","rooms","countryText","concat","priceText","Number","roomsText","react_default","a","createElement","className","Component","DateFilter","_ref","name","icon","onDateChange","dateParsed","type","value","onChange","event","_event$target","target","dayjs","OptionsFilter","options","selected","onOptionChange","style","width","map","option","key","nanoid","Filters","handleOptionChange","_this$props","_this","onFilterChange","Object","objectSpread","defineProperty","justifyContent","Filters_DateFilter","Filters_OptionsFilter","Hotel","hotel","src","photo","alt","description","marginTop","city","Array","from","length","_","index","margin","opacity","href","Hotels","data","slug","Hotels_Hotel","locale","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFilterChange","newFilters","setState","handleFilters","_this$state","state","hotelsFiltered","hotelsApi","filter","availabilityFrom","isAfter","availabilityTo","isBefore","filterPrice","add","fetch","response","json","hotels","console","error","_context","t0","_this$state2","components_Hero","components_Filters","components_Hotels","ReactDOM","render","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.3bcd5915.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\n\nclass Hero extends Component {\n  \n  parseDate = date => date.format('dddd[,] D [de] MMMM [de] YYYY');\n\n  render() {\n    const { dateFrom, dateTo, country, price, rooms } = this.props.filters;\n\n    const countryText = country ? `en ${country}` : '';\n    const priceText = Number(price) ? `por $${Number(price)}` : '';\n    const roomsText = Number(rooms) ? `de hasta ${Number(rooms)} habitaciones` : '';\n\n    return (\n      <section className=\"hero is-primary\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Hoteles</h1>\n            <h2 className=\"subtitle\">\n            Desde el <strong>{this.parseDate(dateFrom)}</strong> hasta el <strong>{this.parseDate(dateTo)}</strong>\n            {' '}{countryText}{' '}{priceText}{' '}{roomsText}.\n            </h2>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nHero.propTypes = {\n  filters: PropTypes.shape({\n    dateFrom: PropTypes.instanceOf(dayjs),\n    dateTo: PropTypes.instanceOf(dayjs),\n    country: PropTypes.string,\n    price: PropTypes.string,\n    rooms: PropTypes.string,\n  }),\n}\n\nexport default Hero;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\n\nconst DateFilter = ({ date, name, icon, onDateChange }) => {\n\n    const handleDateChange = event => {\n        const { name, value } = event.target;\n        onDateChange({ name, value: dayjs(value) })\n    }\n\n    const dateParsed = date.format('YYYY[-]MM[-]DD');\n\n    return (\n        <div className=\"field\">\n            <div className=\"control has-icons-left\">\n                <input className=\"input\" type=\"date\" name={name} value={dateParsed} onChange={handleDateChange} />\n                <span className=\"icon is-small is-left\">\n                    <i className={`fas fa-${icon}`} />\n                </span>\n            </div>\n        </div>\n    );\n}\n\nDateFilter.propTypes = {\n    date: PropTypes.instanceOf(dayjs),\n    name: PropTypes.string,\n    icon: PropTypes.oneOf(['sign-in-alt', 'sign-out-alt']),\n    onDateChange: PropTypes.func,\n}\n\nexport default DateFilter;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport nanoid from 'nanoid';\n\nconst OptionsFilter = ({ options, selected, icon, name, onOptionChange }) => {\n\n    const handleOptionChange = event => {\n        const { name, value } = event.target;\n        onOptionChange({ name, value });\n    }\n\n    return (\n        <div className=\"field\">\n            <div className=\"control has-icons-left\">\n                <div className=\"select\" style={ {width: '100%'} }>\n                    <select style={ {width: '100%'} } value={selected} name={name} onChange={handleOptionChange}>\n                    {\n                        options.map(option => (\n                            <option key={nanoid()} value={option.value}>\n                                {option.name}\n                            </option>\n                        ))\n                    }\n                    </select>\n                </div>\n                <div className=\"icon is-small is-left\">\n                    <i className={`fas fa-${icon}`} />\n                </div>\n            </div>\n        </div>\n    )    \n};\n\nOptionsFilter.propTypes = {\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n            name: PropTypes.string,\n        }),\n    ),\n    name: PropTypes.string,\n    selected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    icon: PropTypes.oneOf(['globe', 'dollar-sign', 'bed']),\n    onOptionChange: PropTypes.func,\n}\n\nexport default OptionsFilter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\n\nimport DateFilter from './DateFilter';\nimport OptionsFilter from './OptionsFilter';\n\nconst options = {\n    country: [\n        {value: '', name: 'Todos los países'}, \n        {value: 'Argentina', name: 'Argentina'}, \n        {value: 'Brasil', name: 'Brasil'}, \n        {value: 'Chile', name: 'Chile'}, \n        {value: 'Uruguay', name: 'Uruguay'}\n    ],\n    price: [\n        {value: 0, name: 'Cualquier precio'}, \n        {value: 1, name: '$'}, \n        {value: 2, name: '$$'}, \n        {value: 3, name: '$$$'}, \n        {value: 4, name: '$$$$'}\n    ],\n    rooms: [\n        {value: 0, name: 'Cualquier tamaño'},\n        {value: 10, name: 'Hotel pequeño'},\n        {value: 20, name: 'Hotel mediano'},\n        {value: 30, name: 'Hotel grande'}\n    ]\n}\n\nclass Filters extends Component {\n\n    handleOptionChange = ({ name, value }) => {\n        const { filters, onFilterChange } = this.props;\n        const newFilters = { ...filters, [name]: value };\n        onFilterChange(newFilters, name);\n    }\n\n    render() {\n\n        const { filters } = this.props;\n\n        return (\n            <nav className=\"navbar is-info\" style={ {justifyContent: 'center'} }>\n                <div className=\"navbar-item\">\n                    <DateFilter\n                    name='dateFrom'\n                    date={ filters.dateFrom }\n                    icon=\"sign-in-alt\"\n                    onDateChange={this.handleOptionChange} />\n                </div>\n                <div className=\"navbar-item\">\n                    <DateFilter\n                    name=\"dateTo\"\n                    date={ filters.dateTo }\n                    icon=\"sign-out-alt\"\n                    onDateChange={this.handleOptionChange} />\n                </div>\n                <div className=\"navbar-item\">\n                    <OptionsFilter\n                    options={ options.country }\n                    selected={ filters.country }\n                    icon=\"globe\"\n                    name=\"country\"\n                    onOptionChange={this.handleOptionChange} />\n                </div>\n                <div className=\"navbar-item\">\n                    <OptionsFilter\n                    options={ options.price }\n                    selected={ filters.price }\n                    icon=\"dollar-sign\"\n                    name=\"price\"\n                    onOptionChange={this.handleOptionChange} />\n                </div>\n                <div className=\"navbar-item\">\n                    <OptionsFilter\n                    options={ options.rooms }\n                    selected={ filters.rooms }\n                    icon=\"bed\"\n                    name=\"rooms\"\n                    onOptionChange={this.handleOptionChange} />\n                </div>\n            </nav>\n        );\n    }\n};\n\nFilters.propTypes = {\n    filters: PropTypes.shape({\n        dateFrom: PropTypes.instanceOf(dayjs),\n        dateTo: PropTypes.instanceOf(dayjs),\n        coutry: PropTypes.string,\n        price: PropTypes.string,\n        rooms: PropTypes.string\n    }),\n    onFilterChange: PropTypes.func,\n}\n\nexport default Filters;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass Hotel extends Component {\n    render() {\n\n        const { hotel } = this.props;\n\n        return(\n            <div className=\"card\">\n                <div className=\"card-image\">\n                    <figure className=\"image is-4by3\">\n                        <img src={hotel.photo} alt={hotel.name} />\n                    </figure>\n                </div>\n                <div className=\"card-content\">\n                    <p className=\"title is-4\">{hotel.name}</p>\n                    <p>{hotel.description}</p>\n                    <div className=\"field is-grouped is-grouped-multiline\" style={{marginTop: '1em'}}>\n                    <div className=\"control\">\n                        <div className=\"tags has-addons\">\n                        <span className=\"tag is-medium is-info\"><i className=\"fas fa-map-marker\"></i></span>\n                        <span className=\"tag is-medium\">{`${hotel.city}, ${hotel.country}`}</span>\n                        </div>\n                    </div>\n                    <div className=\"control\">\n                        <div className=\"tags has-addons\">\n                        <span className=\"tag is-medium is-info\"><i className=\"fas fa-bed\"></i></span>\n                        <span className=\"tag is-medium\">{`${hotel.rooms} Habitaciones`}</span>\n                        </div>\n                    </div>\n                    <div className=\"control\">\n                        <div className=\"tags\">\n                        <span className=\"tag is-medium is-info\">\n                            {Array.from({ length: 4 }, (_, index) => (\n                                <i className=\"fas fa-dollar-sign\" key={index}\n                                style={{margin: '0 .125em', opacity: `${index + 1 <= hotel.price ? '1' : '.25'}`}}\n                                />\n                            ))}\n                        </span>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                <div className=\"card-footer\">\n                    <a href=\"#0\" className=\"card-footer-item has-background-primary has-text-white has-text-weight-bold\">Reservar</a>\n                </div>\n            </div>\n        )\n    }\n}\n\nHotel.propTypes = {\n    hotel: PropTypes.shape({\n        slug: PropTypes.string,\n        name: PropTypes.string,\n        photo: PropTypes.string,\n        description: PropTypes.string,\n        availabilityFrom: PropTypes.number,\n        availabilityTo: PropTypes.number,\n        rooms: PropTypes.string,\n        city: PropTypes.string,\n        country: PropTypes.string,\n        price: PropTypes.string\n    })\n}\n\nexport default Hotel;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Hotel from '../Hotels/Hotel';\n\nclass Hotels extends Component {\n    render() {\n        const { data } = this.props;\n        return(\n            <section className=\"section\" style={ {marginTop: '3em'} }>\n                <div className=\"container\">\n                    { data.length !== 0 ?(\n                        <div className=\"columns is-multiline\">\n                        { data.map(hotel => <div className=\"column is-one-third\" key={hotel.slug} ><Hotel hotel={ hotel } /></div>) }\n                        </div>\n                    ) : (\n                        <article className=\"message is-warning\">\n                            <div className=\"message-body\">\n                                No se han encontrado hoteles que coincidan con los parámetros de búsqueda.\n                            </div>\n                        </article>\n                    )                    \n                    }\n                </div>\n            </section>\n        )\n    }\n}\n\nHotels.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            slug: PropTypes.string,\n            name: PropTypes.string,\n            photo: PropTypes.string,\n            description: PropTypes.string,\n            availabilityFrom: PropTypes.number,\n            availabilityTo: PropTypes.number,\n            rooms: PropTypes.string,\n            city: PropTypes.string,\n            country: PropTypes.string,\n            price: PropTypes.string\n        })\n    )\n}\n\nexport default Hotels;","import React, { Component } from 'react';\n\nimport './index.css';\nimport Hero from '../Hero';\nimport Filters from '../Filters';\nimport Hotels from '../Hotels';\n\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/es';\n\ndayjs.locale('es');\n\nconst API = 'https://wt-8a099f3e7c73b2d17f4e018b6cfd6131-0.sandbox.auth0-extend.com/acamica';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hotelsApi: [],\n      hotelsFiltered: [],\n      filters: {\n        dateFrom: dayjs(),\n        dateTo: dayjs().add(1, 'month'),\n        country: '',\n        price: 0,\n        rooms: 0\n      }\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(API);\n      const hotels = await response.json();\n      this.setState({ hotelsApi: hotels, hotelsFiltered: hotels });\n    } catch(error) {\n      console.error(error);\n    } \n  } \n  \n  handleFilterChange = (newFilters ) => {\n    this.setState({ filters: newFilters }, () => {\n      this.handleFilters();\n    })\n  };\n\n  handleFilters = () => {\n    const { filters, hotelsApi } = this.state\n\n    const hotelsFiltered = hotelsApi\n      .filter(hotel => dayjs(hotel.availabilityFrom).isAfter(filters.dateFrom))\n      .filter(hotel => dayjs(hotel.availabilityTo).isBefore(filters.dateTo))\n      .filter(hotel => {\n        if (filters.country === '' || filters.country === 'Todos los países') return true\n        if (filters.country === hotel.country) return true\n\n        return false\n      })\n      .filter(hotel => {\n        const filterPrice = Number(filters.price)\n\n        if (filterPrice === 0 || filterPrice === 'Cualquier precio') return true\n        if (filterPrice === hotel.price) return true\n\n        return false\n      })\n      .filter(hotel => {\n        if (filters.rooms === 0 || filters.rooms === 'Cualquier tamaño') return true\n        if (hotel.rooms >= filters.rooms) return true\n\n        return false\n      })\n\n    this.setState({ hotelsFiltered })\n  }\n\n  render() {\n    const { hotelsFiltered, filters } = this.state;\n    return (\n      <div className=\"container\">\n        <Hero filters={ filters } />\n        <Filters filters={ filters } onFilterChange={this.handleFilterChange} />\n        <Hotels data={ hotelsFiltered }/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bulma'\n\nimport './index.scss'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}